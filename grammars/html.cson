'scopeName': 'text.html.basic'
'fileTypes': [
  'ejs'
  'htm'
  'html'
  'kit'
  'shtml'
  'tmpl'
  'tpl'
  'xhtml'
]
'firstLineMatch': '''(?xi)
  # Document type definition
  <(?:!DOCTYPE\\s*)?html
  |
  # Emacs modeline
  -\\*-(?:\\s*(?=[^:;\\s]+\\s*-\\*-)|(?:.*?[;\\s]|(?<=-\\*-))mode\\s*:\\s*)
    html
  (?=[\\s;]|(?<![-*])-\\*-).*?-\\*-
  |
  # Vim modeline
  (?:(?:\\s|^)vi(?:m[<=>]?\\d+|m)?|\\sex)(?=:(?=\\s*set?\\s[^\\n:]+:)|:(?!\\s*set?\\s))(?:(?:\\s|\\s*:\\s*)\\w*(?:\\s*=(?:[^\\n\\\\\\s]|\\\\.)*)?)*[\\s:](?:filetype|ft|syntax)\\s*=
    x?html
  (?=\\s|:|$)
'''
'name': 'HTML'
'patterns': [
  {
    'begin': '(<\\?)(xml)'
    'captures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.xml.html'
    'end': '(\\?>)'
    'name': 'meta.tag.preprocessor.xml.html'
    'patterns': [
      {
        'include': '#tag-generic-attribute'
      }
      {
        'include': '#string-double-quoted'
      }
      {
        'include': '#string-single-quoted'
      }
    ]
  }
  {
    'begin': '<!--'
    'captures':
      '0':
        'name': 'punctuation.definition.comment.html'
    'end': '--\\s*>'
    'name': 'comment.block.html'
    'patterns': [
      {
        'match': '--(?!-*\\s*>)'
        'name': 'invalid.illegal.bad-comments-or-CDATA.html'
      }
      {
        'include': '#embedded-code'
      }
    ]
  }
  {
    'begin': '<!'
    'captures':
      '0':
        'name': 'punctuation.definition.tag.html'
    'end': '>'
    'name': 'meta.tag.sgml.html'
    'patterns': [
      {
        'begin': '(?i:DOCTYPE)'
        'captures':
          '1':
            'name': 'entity.name.tag.doctype.html'
        'end': '(?=>)'
        'name': 'meta.tag.sgml.doctype.html'
        'patterns': [
          {
            'match': '"[^">]*"'
            'name': 'string.quoted.double.doctype.identifiers-and-DTDs.html'
          }
        ]
      }
      {
        'begin': '\\[CDATA\\['
        'end': ']](?=>)'
        'name': 'constant.other.inline-data.html'
      }
      {
        'match': '(\\s*)(?!--|>)\\S(\\s*)'
        'name': 'invalid.illegal.bad-comments-or-CDATA.html'
      }
    ]
  }
  {
    'include': '#embedded-code'
  }
  {
    'begin': '(?i)(?=<style(\\s+|>))'
    'end': '(?i)(</)(style)(>)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.style.html'
      '3':
        'name': 'punctuation.definition.tag.html'
    'name': 'meta.tag.style.html'
    'patterns': [
      {
        'begin': '(?i)\\G(<)(style)'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.tag.html'
          '2':
            'name': 'entity.name.tag.style.html'
        'end': '>'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.tag.html'
        'patterns': [
          {
            'include': '#tag-stuff'
          }
        ]
      }
      {
        'begin': '(?!\\G)'
        'end': '(?i)(?=</style>)'
        'name': 'source.css.embedded.html'
        'patterns': [
          {
            'include': '#embedded-code'
          }
          {
            'include': 'source.css'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?i)(?=<script\\s+.*?\\btype\\s*=\\s*[\'"]?text/(?:x-handlebars|(?:x-(?:handlebars-)?|ng-)?template|html|ractive)[\'"]?(\\s+|>))'
    'end': '(</)((?i)script)(>)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.script.html'
      '3':
        'name': 'punctuation.definition.tag.html'
    'name': 'meta.tag.script.html'
    'patterns': [
      {
        'begin': '(?i)\\G(<)(script)'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.tag.html'
          '2':
            'name': 'entity.name.tag.script.html'
        'end': '>'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.tag.html'
        'patterns': [
          {
            'include': '#tag-stuff'
          }
        ]
      }
      {
        'begin': '(?!\\G)'
        'end': '(?i)(?=</script>)'
        'name': 'text.embedded.html'
        'patterns': [
          {
            'include': 'text.html.basic'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?i)(?=<script\\s+.*?\\btype\\s*=\\s*[\'"]?text/coffeescript[\'"]?(\\s+|>))'
    'end': '(</)((?i)script)(>)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.script.html'
      '3':
        'name': 'punctuation.definition.tag.html'
    'name': 'meta.tag.script.html'
    'patterns': [
      {
        'begin': '(?i)\\G(<)(script)'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.tag.html'
          '2':
            'name': 'entity.name.tag.script.html'
        'end': '>'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.tag.html'
        'patterns': [
          {
            'include': '#tag-stuff'
          }
        ]
      }
      {
        'begin': '(?!\\G)'
        'end': '(?i)(?=</script>)'
        'name': 'source.coffee.embedded.html'
        'patterns': [
          {
            'begin': '###'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.coffee'
            'end': '###|(?=(?i)</script>)'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.comment.coffee'
            'name': 'comment.block.coffee'
          }
          {
            'begin': '#'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.coffee'
            'end': '(?=(?i)</script>|$)'
            'name': 'comment.line.number-sign.coffee'
          }
          {
            'include': 'source.coffee'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?i)(?=<script(\\s+|>))'
    'end': '(</)((?i)script)(>)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.script.html'
      '3':
        'name': 'punctuation.definition.tag.html'
    'name': 'meta.tag.script.html'
    'patterns': [
      {
        'begin': '(?i)\\G(<)(script)'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.tag.html'
          '2':
            'name': 'entity.name.tag.script.html'
        'end': '>'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.tag.html'
        'patterns': [
          {
            'include': '#tag-stuff'
          }
        ]
      }
      {
        'begin': '(?!\\G)'
        'end': '(?i)(?=</script>)'
        'name': 'source.js.embedded.html'
        'patterns': [
          {
            'begin': '//'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.js'
            'end': '(?=(?i)</script>|$)'
            'name': 'comment.line.double-slash.js'
          }
          {
            'begin': '/\\*'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.begin.js'
            'end': '\\*/|(?=(?i)</script)'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.comment.begin.js'
            'name': 'comment.block.js'
          }
          {
            'include': 'source.js'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?i)(</?)(body|head|html)(?=\\s|/?>)'
    'captures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.structure.$2.html'
    'end': '(>)'
    'name': 'meta.tag.structure.$2.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
    ]
  }
  {
    'begin': '(?i)(</?)(address|blockquote|dd|div|section|article|aside|header|footer|nav|menu|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|pre)(?=\\s|/?>)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.begin.html'
      '2':
        'name': 'entity.name.tag.block.$2.html'
    'end': '(>)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.end.html'
    'name': 'meta.tag.block.$2.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
    ]
  }
  {
    'begin': '(?i)(</?)(a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)(?=\\s|/?>)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.begin.html'
      '2':
        'name': 'entity.name.tag.inline.$2.html'
    'end': '((?: ?/)?>)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.end.html'
    'name': 'meta.tag.inline.$2.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
    ]
  }
  {
    # Opening tag (optionally self-closing)
    'begin': '(<)([a-zA-Z0-9:-]+)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.begin.html'
      '2':
        'name': 'entity.name.tag.other.html'
    'end': '/?>'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.tag.end.html'
    'name': 'meta.tag.other.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
    ]
  }
  {
    # Closing tag, which doesn't allow attributes
    'begin': '(</)([a-zA-Z0-9:-]+)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.begin.html'
      '2':
        'name': 'entity.name.tag.other.html'
    'end': '>'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.tag.end.html'
    'name': 'meta.tag.other.html'
  }
  {
    'include': '#text-entities'
  }
  {
    'match': '<>'
    'name': 'invalid.illegal.incomplete.html'
  }
]
'repository':
  'embedded-code':
    'patterns': [
      {
        'include': '#smarty'
      }
      {
        'include': '#python'
      }
    ]
  'text-entities':
    # https://www.w3.org/TR/html51/syntax.html#consume-a-character-reference
    'patterns': [
      {
        'begin': '(&)([a-zA-Z0-9]+|#\\d+|#[xX][0-9a-fA-F]+)'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.entity.begin.html'
          '2':
            'name': 'entity.name.entity.other.html'
        'end': ';'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.entity.end.html'
        'name': 'constant.character.entity.html'
      }
      {
        'match': '&(?!\\s|<|&)'
        'name': 'invalid.illegal.bad-ampersand.html'
      }
    ]
  'attribute-entities':
    # https://www.w3.org/TR/html51/syntax.html#consume-a-character-reference
    # Because it would be infeasible to include the entire list of allowed entities,
    # make sure that an equals sign or the end of a string does not follow a potential reference.
    'patterns': [
      {
        'begin': '(&)(#\\d+|#[xX][0-9a-fA-F]+)'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.entity.begin.html'
          '2':
            'name': 'entity.name.entity.other.html'
        'end': ';'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.entity.end.html'
        'name': 'constant.character.entity.html'
      }
      {
        'begin': '(&)([a-zA-Z0-9]++)(?!["\'=])'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.entity.begin.html'
          '2':
            'name': 'entity.name.entity.other.html'
        'end': ';'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.entity.end.html'
        'name': 'constant.character.entity.html'
      }
      {
        # In attributes, potential references that end with an equals sign are fine
        'match': '&(?!\\s|<|&|[a-zA-Z0-9]+=)'
        'name': 'invalid.illegal.bad-ampersand.html'
      }
    ]
  'python':
    'begin': '(?:^\\s*)<\\?python(?!.*\\?>)'
    'end': '\\?>(?:\\s*$\\n)?'
    'name': 'source.python.embedded.html'
    'patterns': [
      {
        'include': 'source.python'
      }
    ]
  'smarty':
    'patterns': [
      {
        'begin': '(\\{(literal)\\})'
        'captures':
          '1':
            'name': 'source.smarty.embedded.html'
          '2':
            'name': 'support.function.built-in.smarty'
        'end': '(\\{/(literal)\\})'
      }
      {
        'begin': '{{|{'
        'disabled': 1
        'end': '}}|}'
        'name': 'source.smarty.embedded.html'
        'patterns': [
          {
            'include': 'source.smarty'
          }
        ]
      }
    ]
  'string-double-quoted':
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.html'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.html'
    'name': 'string.quoted.double.html'
    'patterns': [
      {
        'include': '#embedded-code'
      }
      {
        'include': '#attribute-entities'
      }
    ]
  'string-single-quoted':
    'begin': '\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.html'
    'end': '\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.html'
    'name': 'string.quoted.single.html'
    'patterns': [
      {
        'include': '#embedded-code'
      }
      {
        'include': '#attribute-entities'
      }
    ]
  'tag-generic-attribute':
    # https://www.w3.org/TR/html51/syntax.html#attribute-name-state
    'patterns': [
      {
        'begin': '([^\\s/=>"\'<]+)(=)'
        'beginCaptures':
          '1':
            'name': 'entity.other.attribute-name.html'
          '2':
            'name': 'punctuation.separator.key-value.html'
        'end': '(?!\\G)|(?=\\s|/?>)'
        'name': 'meta.attribute-with-value.html'
        'patterns': [
          {
            'include': '#string-double-quoted'
          }
          {
            'include': '#string-single-quoted'
          }
          {
            'include': '#unquoted-attribute'
          }
        ]
      }
      {
        'match': '[^\\s/=>"\'<]+'
        'captures':
          '0':
            'name': 'entity.other.attribute-name.html'
        'name': 'meta.attribute-without-value.html'
      }
    ]
  'tag-id-attribute':
    'begin': '\\b(id)(=)'
    'captures':
      '1':
        'name': 'entity.other.attribute-name.id.html'
      '2':
        'name': 'punctuation.separator.key-value.html'
    'end': '(?!\\G)|(?=\\s|/?>)'
    'name': 'meta.attribute-with-value.id.html'
    'patterns': [
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.html'
        'contentName': 'meta.toc-list.id.html'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.html'
        'name': 'string.quoted.double.html'
        'patterns': [
          {
            'include': '#embedded-code'
          }
          {
            'include': '#attribute-entities'
          }
        ]
      }
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.html'
        'contentName': 'meta.toc-list.id.html'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.html'
        'name': 'string.quoted.single.html'
        'patterns': [
          {
            'include': '#embedded-code'
          }
          {
            'include': '#attribute-entities'
          }
        ]
      }
      {
        'include': '#unquoted-attribute'
      }
    ]
  'tag-class-attribute':
    'begin': '\\b(class)(=)'
    'captures':
      '1':
        'name': 'entity.other.attribute-name.class.html'
      '2':
        'name': 'punctuation.separator.key-value.html'
    'end': '(?!\\G)|(?=\\s|/?>)'
    'name': 'meta.attribute-with-value.class.html'
    'patterns': [
      {
        'include': '#string-double-quoted'
      }
      {
        'include': '#string-single-quoted'
      }
      {
        'include': '#unquoted-attribute'
      }
    ]
  'tag-stuff':
    'patterns': [
      {
        'include': '#tag-id-attribute'
      }
      {
        'include': '#tag-class-attribute'
      }
      {
        'include': '#tag-generic-attribute'
      }
      {
        'include': '#string-double-quoted'
      }
      {
        'include': '#string-single-quoted'
      }
      {
        'include': '#embedded-code'
      }
    ]
  'unquoted-attribute':
    'patterns': [
      {
        'include': '#attribute-entities'
      }
      {
        # https://www.w3.org/TR/html51/syntax.html#attribute-value-unquoted-state
        'match': '([^\\s&>"\'<=`]|&(?=>))+'
        'name': 'string.unquoted.html'
      }
    ]
